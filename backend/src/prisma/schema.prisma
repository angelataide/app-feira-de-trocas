generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum StatusItem {
    DISPONIVEL
    RESERVADO
    TROCADO
}

enum StatusProposta {
    PENDENTE
    ACEITA
    RECUSADA
    CANCELADA
}

model Usuario {
    id       Int     @id @default(autoincrement())
    nome     String
    email    String  @unique
    senha    String
    telefone String?
    bairro   String? // <-- MUDANÇA: Adicionado bairro do usuário

    itens              Item[]
    propostasFeitas    Proposta[] @relation("Solicitante") // <-- MUDANÇA: Nomeado para clareza
    propostasRecebidas Proposta[] @relation("Receptor") // <-- MUDANÇA: Adicionada relação de propostas recebidas
    mensagens          Mensagem[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("usuarios")
}

model Item {
    id          Int        @id @default(autoincrement())
    titulo      String     @map("titulo") // <-- MUDANÇA: Renomeado de 'nome' para 'titulo'
    descricao   String?
    categoria   String
    condicao    String // <-- MUDANÇA: Adicionado estado de conservação
    observacoes String? // <-- MUDANÇA: Adicionado campo de observações
    imagemUrl   String?    @map("imagem_url") // <-- MUDANÇA: Adicionado campo para imagem
    status      StatusItem @default(DISPONIVEL)

    usuarioId Int     @map("usuario_id")
    usuario   Usuario @relation(fields: [usuarioId], references: [id])

    propostasComoOfertado Proposta[] @relation("ItemOfertado")
    propostasComoDesejado Proposta[] @relation("ItemDesejado")

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("itens")
}

model Proposta {
    id              Int            @id @default(autoincrement())
    status          StatusProposta @default(PENDENTE)
    mensagemInicial String?        @map("mensagem_inicial") // <-- MUDANÇA: Adicionada mensagem inicial

    solicitanteId Int     @map("solicitante_id")
    solicitante   Usuario @relation("Solicitante", fields: [solicitanteId], references: [id])

    receptorId Int     @map("receptor_id") // <-- MUDANÇA: Adicionado ID explícito do receptor
    receptor   Usuario @relation("Receptor", fields: [receptorId], references: [id])

    itemOfertadoId Int  @map("itemOfertado_id")
    itemOfertado   Item @relation("ItemOfertado", fields: [itemOfertadoId], references: [id])

    itemDesejadoId Int  @map("itemDesejado_id")
    itemDesejado   Item @relation("ItemDesejado", fields: [itemDesejadoId], references: [id])

    mensagens Mensagem[] // <-- MUDANÇA: Relação com o chat

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("propostas")
}

// <-- MUDANÇA: Adicionado modelo para Mensagens
model Mensagem {
    id       Int    @id @default(autoincrement())
    conteudo String

    propostaId Int
    proposta   Proposta @relation(fields: [propostaId], references: [id])

    autorId Int
    autor   Usuario @relation(fields: [autorId], references: [id])

    createdAt DateTime @default(now())

    @@map("mensagens")
}
